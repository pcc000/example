<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean" />

    <bean class="com.tiefan.keel.web.FspErrorRespController"/>

    <!-- Bean Method Executor -->
    <bean class="com.tiefan.keel.web.BeanMethodInvokeController">
        <property name="beanMethodInvoker">
            <bean class="com.tiefan.keel.utils.invoke.BeanMethodInvoker"/>
        </property>
    </bean>

    <bean id="fspBodyRequestResponseProcessor" class="com.tiefan.keel.fsp4server.FspBodyRequestResponseProcessor">
        <property name="returnWrappers">
            <list>
                <bean class="com.tiefan.keel.fsp4server.DefaultReturnWrapper">
                    <property name="exclude">
                        <list>
                            <value>com.tiefan.keel.fsp4server.resp.Response</value>
                            <value>com.tiefan.keel.fsp4server.resp.ApiResp</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
        <property name="defaultProtocol" ref="fspProtocolJson"/>
    </bean>
    <bean id="fspProtocolJson" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="com.tiefan.keel.fsp.FspProtocol.BASE64_JSON" />
    </bean>

    <bean class="com.tiefan.keel.fsp4server.FspBodyProcessorInjector" />

    <mvc:annotation-driven conversion-service="conversionService" validator="validator">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8"/>
                <property name="writeAcceptCharset" value="false"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <constructor-arg index="0" ref="mvcObjectMapper" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <bean id="mvcObjectMapper" class="com.tiefan.keel.fsp4server.MvcJacksonObjectMapperFactoryBean" />

    <!-- spring bean validator  start -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n.messages</value>
                <value>i18n.validation</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
        <property name="validator" ref="validator"/>
    </bean>
    <!-- spring bean validator  end -->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="204800" />
    </bean>

    <bean id="exceptionMessageUtils" class="com.tiefan.keel.utils.ExceptionMessageUtils"/>

    <bean class="com.tiefan.keel.fsp4server.FspExceptionResolver">
        <property name="excludedExceptions">
            <list>
                <value>org.springframework.http.converter.HttpMessageNotWritableException</value>
            </list>
        </property>
    </bean>

</beans>